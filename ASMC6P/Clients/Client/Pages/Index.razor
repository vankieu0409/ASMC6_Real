@page "/"
@using MudBlazor
@using MudBlazor.Services
<PageTitle>Index</PageTitle>
<MudContainer Class="flex-xxl-fill">
    @if (SearchText == null && CategoryUrl == null)
    {
        <ProductList />
    }
    else
    {
        
    }
</MudContainer>
@code
{
     [Parameter]
        public string? CategoryUrl { get; set; } = null;

        [Parameter]
        public string? SearchText { get; set; } = null;

        [Parameter]
        public int Page { get; set; } = 1;

        protected override async Task OnParametersSetAsync()
        {
            if (SearchText != null)
            {
                await _productService.SearchProducts(SearchText);
            }
            else
            {
                await _productService.GetProducts(CategoryUrl);
            }
        }
    
    async void RefreshToken()
    {
        await _authentication.RefreshToken();
        var usser = await _localStorage.GetItemAsStringAsync("user");
        await _jsRuntime.InvokeVoidAsync("alert", usser );

    }

    protected async override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        var roles = await _authentication.GetRoleCollection();
        await _localStorage.SetItemAsync("roles", roles);
    }

}
